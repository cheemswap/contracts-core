/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "CheemsERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheemsERC20__factory>;
    getContractFactory(
      name: "CheemsFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheemsFactory__factory>;
    getContractFactory(
      name: "CheemsPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheemsPair__factory>;
    getContractFactory(
      name: "ICheemsCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheemsCallee__factory>;
    getContractFactory(
      name: "ICheemsERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheemsERC20__factory>;
    getContractFactory(
      name: "ICheemsFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheemsFactory__factory>;
    getContractFactory(
      name: "ICheemsPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICheemsPair__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;

    getContractAt(
      name: "CheemsERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheemsERC20>;
    getContractAt(
      name: "CheemsFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheemsFactory>;
    getContractAt(
      name: "CheemsPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheemsPair>;
    getContractAt(
      name: "ICheemsCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheemsCallee>;
    getContractAt(
      name: "ICheemsERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheemsERC20>;
    getContractAt(
      name: "ICheemsFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheemsFactory>;
    getContractAt(
      name: "ICheemsPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICheemsPair>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
